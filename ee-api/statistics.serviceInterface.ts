/**
 * Elastic Email REST API
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://elasticemail.com/account#/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given request’s description.    This is the documentation for REST API. If you’d like to read our legacy documentation regarding Web API v2 click <a target=\"_blank\" href=\"https://api.elasticemail.com/public/help\">here</a>.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { ChannelLogStatusSummary } from '../model/models';
import { LogStatusSummary } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface StatisticsServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Load Campaign Stats
     * Retrieve stats of an existing campaign. Required Access Level: ViewChannels
     * @param name The name of the campaign to get.
     */
    statisticsCampaignsByNameGet(name: string, extraHttpRequestParams?: any): Observable<ChannelLogStatusSummary>;

    /**
     * Load Campaigns Stats
     * Returns a list of your Campaigns\&#39; stats. Required Access Level: ViewChannels
     * @param limit Maximum number of returned items.
     * @param offset How many items should be returned ahead.
     */
    statisticsCampaignsGet(limit?: number, offset?: number, extraHttpRequestParams?: any): Observable<Array<ChannelLogStatusSummary>>;

    /**
     * Load Channel Stats
     * Retrieve an existing channel stats. Required Access Level: ViewChannels
     * @param name The name of the channel to get.
     */
    statisticsChannelsByNameGet(name: string, extraHttpRequestParams?: any): Observable<ChannelLogStatusSummary>;

    /**
     * Load Channels Stats
     * Returns a list of your Channels\&#39; stats. Required Access Level: ViewChannels
     * @param limit Maximum number of returned items.
     * @param offset How many items should be returned ahead.
     */
    statisticsChannelsGet(limit?: number, offset?: number, extraHttpRequestParams?: any): Observable<Array<ChannelLogStatusSummary>>;

    /**
     * Load Statistics
     * Returns basic statistics. Required Access Level: ViewReports
     * @param from Starting date for search in YYYY-MM-DDThh:mm:ss format.
     * @param to Ending date for search in YYYY-MM-DDThh:mm:ss format.
     */
    statisticsGet(from: string, to?: string, extraHttpRequestParams?: any): Observable<LogStatusSummary>;

}
