/**
 * Elastic Email REST API
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    To start using this API, you will need your Access Token (available <a href=\"https://elasticemail.com/account#/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given request’s description.    This is the documentation for REST API. If you’d like to read our legacy documentation regarding Web API v2 click <a href=\"https://api.elasticemail.com/public/help\">here</a>.
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { SubAccountInfo } from '../model/models';
import { SubaccountEmailCreditsPayload } from '../model/models';
import { SubaccountEmailSettings } from '../model/models';
import { SubaccountPayload } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface SubAccountsServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Add, Subtract Email Credits
     * Update email credits of a subaccount by the given amount. Required Access Level: ModifySubAccounts
     * @param email Email address of Sub-Account
     * @param subaccountEmailCreditsPayload Amount of email credits to add or subtract from the current SubAccount email credits pool (positive or negative value)
     */
    subaccountsByEmailCreditsPatch(email: string, subaccountEmailCreditsPayload: SubaccountEmailCreditsPayload, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Delete SubAccount
     * Deletes specified SubAccount. An email will be sent to confirm this change. Required Access Level: ModifySubAccounts
     * @param email Email address of Sub-Account
     */
    subaccountsByEmailDelete(email: string, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Load SubAccount
     * Returns details for the specified SubAccount. Required Access Level: ViewSubAccounts
     * @param email Email address of Sub-Account
     */
    subaccountsByEmailGet(email: string, extraHttpRequestParams?: any): Observable<SubAccountInfo>;

    /**
     * Update SubAccount Email Settings
     * Update SubAccount email settings. Required Access Level: ModifySubAccounts
     * @param email 
     * @param subaccountEmailSettings Updated Email Settings
     */
    subaccountsByEmailSettingsEmailPut(email: string, subaccountEmailSettings: SubaccountEmailSettings, extraHttpRequestParams?: any): Observable<SubaccountEmailSettings>;

    /**
     * Load SubAccounts
     * Returns a list of all your SubAccounts. Required Access Level: ViewSubAccounts
     * @param limit Maximum number of returned items.
     * @param offset How many items should be returned ahead.
     */
    subaccountsGet(limit?: number, offset?: number, extraHttpRequestParams?: any): Observable<Array<SubAccountInfo>>;

    /**
     * Add SubAccount
     * Add a new SubAccount to your Account. To receive an access token for this SubAccount, make a POST security/apikeys request using the \&#39;subaccount\&#39; parameter. Required Access Level: ModifySubAccounts
     * @param subaccountPayload 
     */
    subaccountsPost(subaccountPayload: SubaccountPayload, extraHttpRequestParams?: any): Observable<SubAccountInfo>;

}
